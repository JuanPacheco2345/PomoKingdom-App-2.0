{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Juanp\\\\Desktop\\\\PomoKingdomReact\\\\client\\\\src\\\\components\\\\TimerPage\\\\Menu\\\\TimerAdjust.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport Box from '@mui/material/Box';\nimport Dialog from '@mui/material/Dialog';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport Typography from '@mui/material/Typography';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport ButtonGroup from '@mui/material/ButtonGroup';\n// for adjust group (move into sep component once functionality is clear)\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport TextField from '@mui/material/TextField';\nimport TimeMath from '../../../services/TimeMath';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdjustGroup = ({\n  title,\n  handleAddClick,\n  handleSubClick,\n  newLength,\n  setNewLength\n}) => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      textAlign: 'center',\n      flexDirection: 'column',\n      mb: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        value: newLength\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => {\n            handleAddClick(newLength, setNewLength);\n          },\n          children: [\" \", /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 92\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => {\n            handleSubClick(newLength, setNewLength);\n          },\n          children: [\" \", /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 92\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n// for now this breaks the progress bar which i have to fix\n_c = AdjustGroup;\nconst TimerAdjust = ({\n  pomodoro,\n  setPomodoro,\n  shortBreak,\n  setShortBreak,\n  longBreak,\n  setLongBreak,\n  setTimerSeconds\n}) => {\n  _s();\n  const [open, setOpen] = useState(false);\n  const [newPomodoroLength, setNewPomodoroLength] = useState(pomodoro);\n  const [newShortBreakLength, setNewShortBreakLength] = useState(shortBreak);\n  const [newLongBreakLength, setNewLongBreakLength] = useState(longBreak);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n    setPomodoro(newPomodoroLength);\n    setShortBreak(newShortBreakLength);\n    setLongBreak(newLongBreakLength);\n    // future use probably find a way to find the currently active timer so it doesnt recent the timer if the user were to update it while they are on a break or something\n    setTimerSeconds(TimeMath.convMinSec(newPomodoroLength));\n  };\n  // setTimerSeconds(TimeMath.convMinSec(pomodoro));\n  const handleAddClick = (menuMinute, setMenuMinute) => {\n    setMenuMinute(menuMinute + 1);\n  };\n  const handleSubClick = (menuMinute, setMenuMinute) => {\n    if (menuMinute - 1 <= 1) {\n      setMenuMinute(1);\n    } else {\n      setMenuMinute(menuMinute - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleClickOpen,\n      children: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      children: /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n        onClickAway: handleClose,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            margin: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(AdjustGroup, {\n            title: 'Pomodoro',\n            handleAddClick: handleAddClick,\n            handleSubClick: handleSubClick,\n            newLength: newPomodoroLength,\n            setNewLength: setNewPomodoroLength\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(AdjustGroup, {\n            title: 'Short Break',\n            handleAddClick: handleAddClick,\n            handleSubClick: handleSubClick,\n            newLength: newShortBreakLength,\n            setNewLength: setNewShortBreakLength\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(AdjustGroup, {\n            title: 'Long Break',\n            handleAddClick: handleAddClick,\n            handleSubClick: handleSubClick,\n            newLength: newLongBreakLength,\n            setNewLength: setNewLongBreakLength\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(TimerAdjust, \"y0aJSCDnyaPoCbR4Ckm/TotqXso=\");\n_c2 = TimerAdjust;\nexport default TimerAdjust;\nvar _c, _c2;\n$RefreshReg$(_c, \"AdjustGroup\");\n$RefreshReg$(_c2, \"TimerAdjust\");","map":{"version":3,"names":["React","useState","IconButton","Box","Dialog","SettingsIcon","Typography","ClickAwayListener","ButtonGroup","AddIcon","RemoveIcon","TextField","TimeMath","jsxDEV","_jsxDEV","AdjustGroup","title","handleAddClick","handleSubClick","newLength","setNewLength","sx","display","textAlign","flexDirection","mb","children","fileName","_jsxFileName","lineNumber","columnNumber","alignItems","value","onClick","_c","TimerAdjust","pomodoro","setPomodoro","shortBreak","setShortBreak","longBreak","setLongBreak","setTimerSeconds","_s","open","setOpen","newPomodoroLength","setNewPomodoroLength","newShortBreakLength","setNewShortBreakLength","newLongBreakLength","setNewLongBreakLength","handleClickOpen","handleClose","convMinSec","menuMinute","setMenuMinute","onClickAway","margin","_c2","$RefreshReg$"],"sources":["C:/Users/Juanp/Desktop/PomoKingdomReact/client/src/components/TimerPage/Menu/TimerAdjust.js"],"sourcesContent":["import React, {useState} from 'react'\nimport IconButton from '@mui/material/IconButton';\nimport Box from '@mui/material/Box';\nimport Dialog from '@mui/material/Dialog';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport Typography from '@mui/material/Typography';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport ButtonGroup from '@mui/material/ButtonGroup';\n// for adjust group (move into sep component once functionality is clear)\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport TextField from '@mui/material/TextField';\nimport TimeMath from '../../../services/TimeMath'\n\nconst AdjustGroup = ({title, handleAddClick, handleSubClick, newLength, setNewLength}) => {\n    return (\n        <Box sx={\n            {display: 'flex', textAlign: 'center',flexDirection: 'column', mb: 2}\n        }>\n            <Typography>{title}</Typography>\n            <Box sx={{display: 'flex', alignItems: 'center'}}>\n                <TextField value={newLength} />\n                <ButtonGroup sx={{display: 'flex', flexDirection: 'column'}}>\n                    <IconButton onClick={() => {handleAddClick(newLength, setNewLength)}}> <AddIcon /> </IconButton>\n                    <IconButton onClick={() => {handleSubClick(newLength, setNewLength)}}> <RemoveIcon /> </IconButton>\n                </ButtonGroup>\n            </Box>\n        </Box>\n    )\n}\n\n// for now this breaks the progress bar which i have to fix\nconst TimerAdjust = ({pomodoro , setPomodoro, shortBreak, setShortBreak, longBreak, setLongBreak, setTimerSeconds}) => {\n    const [open, setOpen] = useState(false);\n    const [newPomodoroLength, setNewPomodoroLength] = useState(pomodoro);\n    const [newShortBreakLength, setNewShortBreakLength] = useState(shortBreak);\n    const [newLongBreakLength, setNewLongBreakLength] = useState(longBreak);\n\n    const handleClickOpen = () => {\n        setOpen(true)\n    }\n    const handleClose = () => {\n        setOpen(false)\n        setPomodoro(newPomodoroLength)\n        setShortBreak(newShortBreakLength)\n        setLongBreak(newLongBreakLength)\n        // future use probably find a way to find the currently active timer so it doesnt recent the timer if the user were to update it while they are on a break or something\n        setTimerSeconds(TimeMath.convMinSec(newPomodoroLength));\n    }\n    // setTimerSeconds(TimeMath.convMinSec(pomodoro));\n    const handleAddClick = (menuMinute, setMenuMinute) => {\n        setMenuMinute(menuMinute + 1)\n    }\n\n    const handleSubClick = (menuMinute, setMenuMinute) => {\n        if (menuMinute - 1 <= 1){\n            setMenuMinute(1);\n        } else {\n            setMenuMinute(menuMinute - 1)\n        }\n\n    }\n\nreturn(\n    <Box>\n        <IconButton onClick={handleClickOpen}>\n            <SettingsIcon />\n        </IconButton>\n\n        <Dialog open={open}>\n            <ClickAwayListener onClickAway={handleClose}>\n                <Box sx={{display: 'flex', flexDirection: 'column',margin: 5}}>\n                    <AdjustGroup title={'Pomodoro'} handleAddClick={handleAddClick} handleSubClick={handleSubClick} newLength={newPomodoroLength} setNewLength={setNewPomodoroLength}/>\n                    <AdjustGroup title={'Short Break'} handleAddClick={handleAddClick} handleSubClick={handleSubClick} newLength={newShortBreakLength} setNewLength={setNewShortBreakLength}/>\n                    <AdjustGroup title={'Long Break'} handleAddClick={handleAddClick} handleSubClick={handleSubClick} newLength={newLongBreakLength} setNewLength={setNewLongBreakLength}/>\n                </Box>\n            </ClickAwayListener>\n        </Dialog>\n    </Box>\n)\n}\n\nexport default TimerAdjust"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}